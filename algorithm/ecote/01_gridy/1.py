'''
N, K가 주어질 때
N이 1이 될 때까지 다음 두 과정 중 하나를 
반복적으로 선택하여 수행해야 하는 
최수 횟수 구하기
    - N-1
    - N/K
        - N%K==0 일때만 선택 가능
ex) N=17, K=4 의 최소 횟수는 3
    --1번--> N=16 --2번 두번--> N=1

시간제한 2초, 메모리 제한 128MB

- 입력 조건 : 
    첫째 줄에 N(1<=N<=100,000), K(2<=K<=100,000)가 공백을 기준으로 자연수로 주어짐
- 입력 예시 25 5, 출력 예시 2
            25 3           6

- 그리디 알고리즘 정당성 분석
    가능하면 최대한 나누는 작업이 최적의 해를 항상 보장?
    K가 2 이상이기만 하면, K로 나누는 것이 1을 빼는 것보다 항상 빠르게 N줄임
    또한 N은 항상 1에 도달하게 됨
'''

N, K = map(int, input().split())
cnt = 0

while True:
    if N==1:
        break
    
    if N%K == 0:
        N/=K
    else:
        N-=1
    cnt+=1

print("최소 횟수 = ", cnt)